import java.util.LinkedList;
import java.util.Scanner;

public class CRUD {
    private LinkedList<Record> records = new LinkedList<>();

    public void add(String name, int id, int contact) {
        records.add(new Record(name, id, contact));
        System.out.println("Student added successfully!");
    }

    public void delete(int id) {
        boolean removed = records.removeIf(record -> record.getId() == id);
        if (removed) {
            System.out.println("Record deleted successfully!");
        } else {
            System.out.println("ID not found!");
        }
    }

    public void update(int id, Scanner input) {
        for (Record record : records) {
            if (record.getId() == id) {
                System.out.print("Enter new name: ");
                input.nextLine(); // Clear buffer
                record.setName(input.nextLine());
                System.out.print("Enter new contact: ");
                record.setContact(input.nextInt());
                System.out.println("Record updated successfully!");
                return;
            }
        }
        System.out.println("ID not found!");
    }

    public void display() {
        if (records.isEmpty()) {
            System.out.println("No records found!");
        } else {
            records.forEach(System.out::println);
        }
    }

    public static void main(String[] args) {
        CRUD manager = new CRUD();
        Scanner input = new Scanner(System.in);

        while (true) {
            System.out.println("\n1. Add \n2. Delete \n3. Update \n4. Display \n5. Exit");
            switch (input.nextInt()) {
                case 1 -> {
                    System.out.print("Name: ");
                    String name = input.next();
                    System.out.print("ID: ");
                    int id = input.nextInt();
                    System.out.print("Contact: ");
                    int contact = input.nextInt();
                    manager.add(name, id, contact);
                }
                case 2 -> {
                    System.out.print("ID to delete: ");
                    manager.delete(input.nextInt());
                }
                case 3 -> {
                    System.out.print("ID to update: ");
                    manager.update(input.nextInt(), input);
                }
                case 4 -> manager.display();
                case 5 -> {
                    System.out.println("Goodbye!");
                    input.close();
                    return;
                }
                default -> System.out.println("Invalid choice!");
            }
        }
    }
}

class Record {
    private String name;
    private int id, contact;

    public Record(String name, int id, int contact) {
        this.name = name;
        this.id = id;
        this.contact = contact;
    }

    public int getId() {
        return id;
    }

    public void setName(String name) {
        this.name = name;
    }

    public void setContact(int contact) {
        this.contact = contact;
    }

    @Override
    public String toString() {
        return "ID: " + id + ", Name: " + name + ", Contact: " + contact;
    }
}